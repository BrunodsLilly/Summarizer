// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Layout(title string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/layout.templ`, Line: 9, Col: 16}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</title><script src=\"https://unpkg.com/htmx.org@1.9.10\"></script><style>\n\t\t\tbody { font-family: Arial, sans-serif; margin: 0; padding: 20px; }\n\t\t\t.container { max-width: 800px; margin: 0 auto; }\n\t\t\t.card { border: 1px solid #ddd; border-radius: 8px; padding: 20px; margin: 20px 0; }\n\t\t\tbutton { padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; }\n\t\t\tbutton:hover { background: #0056b3; }\n\t\t\t.loading { opacity: 0.6; }\n\t\t\t\n\t\t\t/* Markdown content styling */\n\t\t\t.markdown-content h1, .markdown-content h2, .markdown-content h3,\n\t\t\t.markdown-content h4, .markdown-content h5, .markdown-content h6 {\n\t\t\t\tmargin-top: 1.5em;\n\t\t\t\tmargin-bottom: 0.5em;\n\t\t\t\tcolor: #333;\n\t\t\t}\n\t\t\t.markdown-content h1 { font-size: 1.8em; border-bottom: 1px solid #eee; padding-bottom: 0.3em; }\n\t\t\t.markdown-content h2 { font-size: 1.5em; }\n\t\t\t.markdown-content h3 { font-size: 1.3em; }\n\t\t\t.markdown-content p { line-height: 1.6; margin-bottom: 1em; }\n\t\t\t.markdown-content ul, .markdown-content ol { margin-bottom: 1em; padding-left: 2em; }\n\t\t\t.markdown-content li { margin-bottom: 0.5em; }\n\t\t\t.markdown-content code { background: #f4f4f4; padding: 2px 4px; border-radius: 3px; font-family: monospace; }\n\t\t\t.markdown-content pre { background: #f4f4f4; padding: 1em; border-radius: 4px; overflow-x: auto; }\n\t\t\t.markdown-content blockquote { border-left: 4px solid #ddd; margin: 1em 0; padding-left: 1em; color: #666; }\n\t\t\t.markdown-content strong { font-weight: bold; }\n\t\t\t.markdown-content em { font-style: italic; }\n\t\t</style></head><body><div class=\"container\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
